[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "poor-cli"
dynamic = ["version"]
description = "AI-powered CLI tool with multi-provider support (Gemini, OpenAI, Claude, Ollama)"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "poor-cli contributors", email = ""}
]
keywords = ["ai", "cli", "repl", "gemini", "openai", "claude", "ollama", "coding-assistant", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "google-generativeai>=0.3.0",
    "rich>=13.0.0",
    "PyYAML>=6.0",
    "aiofiles>=23.0.0",
    "aiohttp>=3.9.0",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
openai = ["openai>=1.0.0"]
anthropic = ["anthropic>=0.18.0"]
all = [
    "openai>=1.0.0",
    "anthropic>=0.18.0",
]
dev = [
    "black>=23.0.0",
    "ruff>=0.0.280",
    "mypy>=1.4.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "coverage[toml]>=7.0.0",
]

[project.scripts]
poor-cli = "poor_cli.repl_async:main"

[project.urls]
Homepage = "https://github.com/gongahkia/poor-cli"
Repository = "https://github.com/gongahkia/poor-cli"
Issues = "https://github.com/gongahkia/poor-cli/issues"

[tool.setuptools.dynamic]
version = {attr = "poor_cli.__version__"}

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports in __init__.py

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = false
strict_equality = true
strict = true
show_error_codes = true
show_column_numbers = true

[[tool.mypy.overrides]]
module = [
    "google.generativeai.*",
    "google.ai.*",
    "openai.*",
    "anthropic.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--verbose",
    "--cov=poor_cli",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=70",
]
